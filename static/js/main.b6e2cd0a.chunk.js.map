{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","totalItems","itemPerPage","onPageChange","currentPage","currentItems","location","useLocation","totalPages","Math","ceil","length","pageNumbers","className","classNames","disabled","pathname","onClick","map","number","active","search","item","items","App","useSearchParams","isSearchParams","setSearchParams","page","Number","get","perPage","getSearchWith","searchParams","params","Object","entries","forEach","key","value","delete","Array","isArray","el","append","set","toString","firstItem","lastItem","min","slice","id","onChange","e","target","htmlFor","currPage","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b6e2cd0a.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import classNames from 'classnames';\nimport { Link, useLocation } from 'react-router-dom';\nimport { getNumbers } from '../../utils';\n\ntype Props = {\n  totalItems: string[];\n  currentItems: string[];\n  currentPage: number;\n  onPageChange: (page: number) => void;\n  itemPerPage: number;\n};\n\nexport const Pagination: React.FC<Props> = ({\n  totalItems,\n  itemPerPage,\n  onPageChange,\n  currentPage,\n  currentItems,\n}) => {\n  const location = useLocation();\n  const totalPages = Math.ceil(totalItems.length / +itemPerPage);\n  const pageNumbers = getNumbers(1, totalPages);\n\n  return (\n    <>\n      <ul className=\"pagination\">\n        <>\n          <li className={classNames('page-item',\n            { disabled: currentPage <= 0 })}\n          >\n            <Link\n              data-cy=\"prevLink\"\n              className=\"page-link\"\n              to={{ pathname: '/prev' }}\n              aria-disabled={currentPage <= 0}\n              onClick={() => onPageChange(currentPage - 1)}\n            >\n              «\n            </Link>\n          </li>\n          {pageNumbers.map(number => (\n            <li\n              key={number}\n              className={classNames('page-item',\n                { active: currentPage === (number - 1) })}\n            >\n              <Link\n                data-cy=\"pageLink\"\n                className=\"page-link\"\n                to={{ pathname: `/${number + 1}`, search: location.search }}\n                onClick={() => onPageChange(number - 1)}\n              >\n                {number}\n              </Link>\n            </li>\n          ))}\n          <li className={classNames('page-item',\n            { disabled: currentPage >= totalPages - 1 })}\n          >\n            <Link\n              data-cy=\"nextLink\"\n              className=\"page-link\"\n              to=\"next\"\n              aria-disabled={currentPage >= totalPages - 1}\n              onClick={() => onPageChange(currentPage + 1)}\n            >\n              »\n            </Link>\n          </li>\n        </>\n      </ul>\n\n      <ul>\n        {currentItems.map(item => (\n          <li data-cy=\"item\" key={item}>{item}</li>\n        ))}\n      </ul>\n    </>\n  );\n};\n","import React from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  // const [totalItems] = useState<string[]>(items);\n  // const [itemsPerPage, setItemsPerPage] = useState(5);\n  // const [currentPage, setCurrentPage] = useState(0);\n  const [isSearchParams, setSearchParams] = useSearchParams();\n\n  const page = Number(isSearchParams.get('page'));\n  const perPage = Number(isSearchParams.get('perPage') || 5);\n\n  const getSearchWith = (\n    searchParams: URLSearchParams,\n    params: { [key: string]: string[] | string | null },\n  ) => {\n    Object.entries(params).forEach(([key, value]) => {\n      if (value === null) {\n        searchParams.delete(key);\n      } else if (Array.isArray(value)) {\n        searchParams.delete(key);\n\n        value.forEach(el => {\n          searchParams.append(key, el);\n        });\n      } else {\n        searchParams.set(key, value);\n      }\n    });\n\n    return searchParams.toString();\n  };\n\n  // const firstItem = itemsPerPage * currentPage;\n  const firstItem = perPage * page;\n  // const lastItem = Math.min(\n  //   (currentPage + 1) * itemsPerPage,\n  //   totalItems.length,\n  // );\n  const lastItem = Math.min(\n    (page + 1) * perPage,\n    items.length,\n  );\n\n  const currentItems = items.slice(firstItem, lastItem);\n\n  const onPageChange = ((currPage: number) => {\n    // setCurrentPage(currPage);\n    setSearchParams(\n      getSearchWith(isSearchParams, { page: currPage.toString() || null }),\n    );\n  });\n\n  const changeItemPerPage = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    // updateSearchParams({ perPage: e.target.value || null });\n    // setItemsPerPage(+e.target.value);\n    // setCurrentPage(0);\n    setSearchParams(\n      getSearchWith(isSearchParams, {\n        perPage: e.target.value || null,\n        page: '0',\n      }),\n    );\n    // updateSearchParams({ page: 0 || null });\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${page + 1} (items ${(firstItem) + 1} - ${lastItem} of ${items.length})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={perPage}\n            onChange={changeItemPerPage}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        currentItems={currentItems}\n        totalItems={items}\n        currentPage={page}\n        onPageChange={onPageChange}\n        itemPerPage={perPage}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}