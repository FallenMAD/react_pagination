{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","totalItems","itemPerPage","onPageChange","currentPage","totalPages","Math","ceil","pageNumbers","className","classNames","disabled","href","onClick","map","number","active","items","App","useState","itemsPerPage","setItemsPerPage","setCurrentPage","firstItem","lastItem","min","length","currentItems","slice","id","value","onChange","e","target","htmlFor","page","item","ReactDOM","render","document","getElementById"],"mappings":"yLAAO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,2BCGIG,EAA8B,SAAC,GAKrC,IAJLC,EAII,EAJJA,WACAC,EAGI,EAHJA,YACAC,EAEI,EAFJA,aACAC,EACI,EADJA,YAEMC,EAAaC,KAAKC,KAAKN,GAAcC,GACrCM,EAAcd,EAAW,EAAGW,GAElC,OACE,mCACE,oBAAII,UAAU,aAAd,SACE,qCACE,oBAAIA,UAAWC,IAAW,YACxB,CAAEC,SAAUP,GAAe,IAD7B,SAGE,mBACE,UAAQ,WACRK,UAAU,YACVG,KAAK,QACL,gBAAeR,GAAe,EAC9BS,QAAS,kBAAMV,EAAaC,EAAc,IAL5C,oBAUDI,EAAYM,KAAI,SAAAC,GAAM,OACrB,oBAEEN,UAAWC,IAAW,YACpB,CAAEM,OAAQZ,IAAiBW,EAAS,IAHxC,SAKE,mBACE,UAAQ,WACRN,UAAU,YACVG,KAAI,WAAMG,GACVF,QAAS,kBAAMV,EAAaY,EAAS,IAJvC,SAMGA,KAVEA,MAcT,oBAAIN,UAAWC,IAAW,YACxB,CAAEC,SAAUP,GAAeC,EAAa,IAD1C,SAGE,mBACE,UAAQ,WACRI,UAAU,YACVG,KAAK,QACL,gBAAeR,GAAeC,EAAa,EAC3CQ,QAAS,kBAAMV,EAAaC,EAAc,IAL5C,4BCjDNa,EAAQvB,EAAW,EAAG,IACzBoB,KAAI,SAAAhB,GAAC,qBAAYA,MAEPoB,EAAgB,WAC3B,MAAwCC,mBAAS,GAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KACA,EAAsCF,mBAAS,GAA/C,mBAAOf,EAAP,KAAoBkB,EAApB,KAEMC,EAAYH,EAAehB,EAE3BoB,EAAWlB,KAAKmB,KACnBrB,EAAc,GAAKgB,EACpBH,EAAMS,QAGFC,EAAeV,EAAMW,MAAML,EAAWC,GAW5C,OACE,sBAAKf,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWL,EAAc,EADzB,mBACsCmB,EAAa,EADnD,cAC0DC,EAD1D,eACyEP,EAAMS,OAD/E,OAIA,sBAAKjB,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACRoB,GAAG,kBACHpB,UAAU,eACVqB,MAAOV,EACPW,SApBiB,SAACC,GAC1BX,GAAiBW,EAAEC,OAAOH,OAC1BR,EAAe,IAaT,UAOE,wBAAQQ,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOI,QAAQ,kBAAkBzB,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACER,WAAYgB,EAAMS,OAClBtB,YAAaA,EACbD,aAzCgB,SAACgC,GACrBb,EAAea,IAyCXjC,YAAakB,IAGf,6BACGO,EAAab,KAAI,SAAAsB,GAAI,OACpB,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,YClElCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.62d8ff49.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import classNames from 'classnames';\nimport { getNumbers } from '../../utils';\n\ntype Props = {\n  totalItems: number;\n  currentPage: number;\n  onPageChange: (page: number) => void;\n  itemPerPage: number;\n};\n\nexport const Pagination: React.FC<Props> = ({\n  totalItems,\n  itemPerPage,\n  onPageChange,\n  currentPage,\n}) => {\n  const totalPages = Math.ceil(totalItems / +itemPerPage);\n  const pageNumbers = getNumbers(1, totalPages);\n\n  return (\n    <>\n      <ul className=\"pagination\">\n        <>\n          <li className={classNames('page-item',\n            { disabled: currentPage <= 0 })}\n          >\n            <a\n              data-cy=\"prevLink\"\n              className=\"page-link\"\n              href=\"#prev\"\n              aria-disabled={currentPage <= 0}\n              onClick={() => onPageChange(currentPage - 1)}\n            >\n              «\n            </a>\n          </li>\n          {pageNumbers.map(number => (\n            <li\n              key={number}\n              className={classNames('page-item',\n                { active: currentPage === (number - 1) })}\n            >\n              <a\n                data-cy=\"pageLink\"\n                className=\"page-link\"\n                href={`#${number}`}\n                onClick={() => onPageChange(number - 1)}\n              >\n                {number}\n              </a>\n            </li>\n          ))}\n          <li className={classNames('page-item',\n            { disabled: currentPage >= totalPages - 1 })}\n          >\n            <a\n              data-cy=\"nextLink\"\n              className=\"page-link\"\n              href=\"#next\"\n              aria-disabled={currentPage >= totalPages - 1}\n              onClick={() => onPageChange(currentPage + 1)}\n            >\n              »\n            </a>\n          </li>\n        </>\n      </ul>\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [itemsPerPage, setItemsPerPage] = useState(5);\n  const [currentPage, setCurrentPage] = useState(0);\n\n  const firstItem = itemsPerPage * currentPage;\n\n  const lastItem = Math.min(\n    (currentPage + 1) * itemsPerPage,\n    items.length,\n  );\n\n  const currentItems = items.slice(firstItem, lastItem);\n\n  const onPageChange = ((page: number) => {\n    setCurrentPage(page);\n  });\n\n  const changeItemPerPage = ((e: React.ChangeEvent<HTMLSelectElement>) => {\n    setItemsPerPage(+e.target.value);\n    setCurrentPage(0);\n  });\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage + 1} (items ${(firstItem) + 1} - ${lastItem} of ${items.length})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={itemsPerPage}\n            onChange={changeItemPerPage}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        totalItems={items.length}\n        currentPage={currentPage}\n        onPageChange={onPageChange}\n        itemPerPage={itemsPerPage}\n      />\n\n      <ul>\n        {currentItems.map(item => (\n          <li data-cy=\"item\" key={item}>{item}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}